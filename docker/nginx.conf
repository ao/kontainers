# Main server block for Kontainers management interface
server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Handle SPA routing
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Proxy API requests to backend
    location /api {
        proxy_pass http://backend:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Proxy WebSocket connections
    location /ws {
        proxy_pass http://backend:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# Dynamic domain-based routing configuration
# =========================================
# This section enables multi-domain reverse proxy functionality.
# The include directive below will load all .conf files from the specified directory,
# allowing for dynamically generated server blocks for different domains.
#
# Each domain-specific configuration file should define its own server block with:
# - server_name directive matching the domain
# - appropriate proxy_pass directives to route traffic to the correct container
# - any domain-specific settings (SSL, custom headers, etc.)
#
# These configuration files will be dynamically generated by the Kontainers backend
# when users create or modify proxy rules through the management interface.

include /etc/nginx/conf.d/*.conf;